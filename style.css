@font-face {
  font-family: 'Minh Nguyen'; /* 您希望在 CSS 中使用的字體名稱 */
  src: url('fonts/Minh-Nguyen-Regular.woff2') format('woff2'), /* .woff2 格式（如果有的話） */
       url('fonts/Minh-Nguyen-Regular.woff') format('woff');   /* .woff 格式 */
  font-weight: normal; /* 字體粗細，可以根據您的字體文件調整 */
  font-style: normal;  /* 字體樣式，例如斜體等 */
}

/* 頁面佈局 */
body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  background-color: #f8f9fa;
  font-family: Arial, sans-serif;
}

/* 轉盤容器 */
.wheel-container {
  position: relative;
  width: min(70vw, 250px);
  height: min(70vw, 250px);
}

/* 外圈轉盤 */
.outer-wheel {
  position: absolute;
  width: 130%;
  height: 130%;
  border-radius: 50%;
  background-color: white;
  border: 3px solid black;
  left: -15%;
  top: -15%;
  /* 確保外圈在內圈之下 */
  z-index: 1;
}

/* 內圈轉盤 */
.inner-wheel {
  position: absolute;
  width: 80%;
  height: 80%;
  border-radius: 50%;
  background-color: white;
  border: 3px solid black;
  left: 10%;
  top: 10%;
  /* 確保內圈在外圈之上 */
  z-index: 2;
}

/* 放射線（分隔線） */
.line {
  position: absolute;
  width: 1px;
  height: 100%;
  background-color: black;
  left: 50%;
  top: 0;
  transform-origin: center;
}

/* 格子樣式 */
.segment {
  position: absolute;
  /* 將定位設在轉盤中心 */
  left: 50%;
  top: 50%;
  /* 讓每個扇區以其左側做旋轉基準 */
  transform-origin: 0 0;
  /* 文字樣式 */
  font-size: calc(6px + 0.4vw);
  font-weight: bold;
  color: black;
  text-align: center;
  font-family: 'Minh Nguyen', serif; /* 使用您在 @font-face 中定義的字體名稱 */
  /* 若有需要，可加入 clip-path 設定扇形效果 */
  /* clip-path: polygon(35% 35%, 100% 0, 100% 100%, 35% 100%); */
}

/* 針對小螢幕的樣式調整 */
@media (max-width: 768px) {
  .inner-wheel .segment {
    font-size: calc(8px + 1vw); /* 可以稍微增加手機上的字體大小，但要適度 */
  }

  .inner-wheel .segment {
    transform: translate(0) !important; /* 先移除之前的 transform */
  }

  .inner-wheel .segment:nth-child(1) { /* 針對內圈的第一個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 0 + 360deg / var(--innerCount) / 2 - 7deg)) translate(370%) !important;
  }

  .inner-wheel .segment:nth-child(2) { /* 針對內圈的第二個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 1 + 360deg / var(--innerCount) / 2 - 7deg)) translate(165%) !important;
  }

  /* 您需要為每個內圈的格子重複這個規則，並調整 translate 值 */
  .inner-wheel .segment:nth-child(3) {
    transform: rotate(calc(360deg / var(--innerCount) * 2 + 360deg / var(--innerCount) / 2 - 7deg)) translate(370%) !important;
  }

  .inner-wheel .segment:nth-child(4) { /* 針對內圈的第二個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 1 + 360deg / var(--innerCount) / 2 - 7deg)) translate(165%) !important;
  }

  .inner-wheel .segment:nth-child(5) {
    transform: rotate(calc(360deg / var(--innerCount) * 2 + 360deg / var(--innerCount) / 2 - 7deg)) translate(370%) !important;
  }

  .inner-wheel .segment:nth-child(6) { /* 針對內圈的第二個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 1 + 360deg / var(--innerCount) / 2 - 7deg)) translate(165%) !important;
  }

  .inner-wheel .segment:nth-child(7) { /* 針對內圈的第二個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 1 + 360deg / var(--innerCount) / 2 - 7deg)) translate(165%) !important;
  }

  .inner-wheel .segment:nth-child(8) {
    transform: rotate(calc(360deg / var(--innerCount) * 2 + 360deg / var(--innerCount) / 2 - 7deg)) translate(370%) !important;
  }

  .inner-wheel .segment:nth-child(9) { /* 針對內圈的第二個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 1 + 360deg / var(--innerCount) / 2 - 7deg)) translate(165%) !important;
  }

  .inner-wheel .segment:nth-child(10) {
    transform: rotate(calc(360deg / var(--innerCount) * 2 + 360deg / var(--innerCount) / 2 - 7deg)) translate(370%) !important;
  }

  .inner-wheel .segment:nth-child(11) { /* 針對內圈的第二個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 1 + 360deg / var(--innerCount) / 2 - 7deg)) translate(165%) !important;
  }

  .inner-wheel .segment:nth-child(12) { /* 針對內圈的第二個格子 */
    transform: rotate(calc(360deg / var(--innerCount) * 1 + 360deg / var(--innerCount) / 2 - 7deg)) translate(165%) !important;
  }
  
  .outer-wheel .segment {
    font-size: calc(10px + 1vw); /* 適當調整外圈字體大小 */
  }

  .outer-wheel .segment {
    transform: rotate(calc(360deg / var(--outerCount) * var(--index) + 360deg / var(--outerCount) / 2)) translate(450%) !important; /* 增加外圈 translate 值 */
  }
}
